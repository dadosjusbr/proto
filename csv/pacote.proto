syntax = "proto3";

import "google/protobuf/timestamp.proto";
option go_package = "github.com/dadosjusbr/proto/csv";

// Estrutura com informações pertencentes a execução da coleta dos dados.
message ResultadoColeta_CSV {
    Coleta_CSV coleta = 1;
    Remuneracoes_CSV remuneracoes = 2;
    FolhaDePagamento_CSV folha = 3;
    Metadados_CSV metadados = 4;
}

// Estrutura com informações pertencentes a coleta dos dados referentes a um órgão-mes-ano
message Coleta_CSV {
    string chave_coleta = 1;
    string orgao = 2;
    int32 mes = 3;
    int32 ano = 4;
    google.protobuf.Timestamp timestamp_coleta = 5;
    string repositorio_coletor = 6;
    string versao_coletor = 7;
    string dir_coletor = 8;
}

// Estrutura que faz referência a uma lista de contra-cheques
message FolhaDePagamento_CSV  {
    repeated ContraCheque_CSV contra_cheque = 1;
}

// Estrutura que faz referência a uma linha de contra-cheque em um órgão-mes-ano
message ContraCheque_CSV {
    string id_contra_cheque = 1;
    string chave_coleta = 2;
    string nome = 3;
    string matricula = 4;
    string funcao = 5;
    string local_trabalho = 6;
    enum Tipo {
        MEMBRO = 0;
        SERVIDOR = 1;
    }
    Tipo tipo = 7;
    bool ativo = 8;
}

// Estrutura que faz referência a uma lista de Remunerações
message Remuneracoes_CSV {
    repeated Remuneracao_CSV remuneracao = 1;
}

// Estrutura que faz referência a uma linha de remuneração em um órgão-mes-ano
message Remuneracao_CSV {
    string id_contra_cheque = 1;
    string chave_coleta = 2;
    enum Natureza {
        R = 0; //Receita
        D = 1; //Despesa
    }
    Natureza natureza = 3;
    string categoria = 4;
    string item = 5;
    double valor = 6;
}

// Estrutura que faz referência aos metadadoss utilizados para construção do índice de transparência
message Metadados_CSV {
    bool nao_requer_login = 1; // É necessário login para coleta dos dados?
    bool nao_requer_captcha = 2; // É necessário captcha para coleta dos dados?
    enum FormaDeAcesso {
        ACESSO_DIRETO = 0; // Acesso ao dado pode ser diretamente ou via API
        AMIGAVEL_PARA_RASPAGEM = 1; // Aqui temos URLs determinísticas, tags usadas com semântica bem-definida
        RASPAGEM_DIFICULTADA = 2; // URLs não determinísticas, tags com semântica difusa (dois componentes com mesmo id)
        NECESSITA_SIMULACAO_USUARIO = 3; // Não dá para fazer raspagem e precisou simular cliques de usuário
    }
    FormaDeAcesso acesso = 3; // Conseguimos prever/construir uma URL com base no órgão/mês/ano que leve ao download do dado?
    enum Extensao {
       PDF  = 0;
       ODS  = 1;
       XLS  = 2;
       JSON  = 3;
       CSV  = 4;
    }
    Extensao extensao = 4; // Extensao do arquivo de dados, ex: CSV, JSON, XLS, etc
    bool estritamente_tabular = 5; // Órgãos que disponibilizam dados limpos (tidy data)
    bool formato_consistente = 6; // Órgão alterou a forma de expor seus dados entre o mês em questão e o mês anterior?
    bool tem_matricula = 7; // Órgão disponibiliza matrícula do servidor?
    bool tem_lotacao = 8; // Órgão disponibiliza lotação do servidor?
    bool tem_cargo = 9; // Órgão disponibiliza a função do servidor?
    enum OpcoesDetalhamento {
        AUSENCIA = 0;
        SUMARIZADO = 1;
        DETALHADO = 2;
    }
    OpcoesDetalhamento detalhamento_receita_base = 10; // Contra-cheque
    OpcoesDetalhamento detalhamento_outras_receitas = 11; // Inclui indenizações, direitos eventuais, diárias, etc
    OpcoesDetalhamento detalhamento_descontos = 12; // Inclui imposto de renda, retenção por teto e contribuição previdenciária
}